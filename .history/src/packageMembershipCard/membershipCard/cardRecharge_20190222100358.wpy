<script>
import wepy from 'wepy';
import requestUrl from '../../api/requestUrl'
import { requestData } from '../../api/requestData'

export default class cardRecharge extends wepy.page {
    config = {
        navigationBarTitleText: '会员卡充值'
    };
    components = {};

    data = {
        selectPay:[],
        selectElement:{},
        inputStatus:false,
        userValue:null,
        cardItem:null,
    };
    methods = {
        selectPay(item){
            this.selectPay.forEach(element => {
                if(item.id == element.id){
                    element.borderColor = '#cd525b'
                    element.sanJiaoColor = '#cd525b'
                    element.moneyColor = '#cd525b'
                    element.beanColor = '#666'
                }else{
                    element.borderColor = '#ccc'
                    element.sanJiaoColor = '#ccc'
                    element.moneyColor = '#666'
                    element.beanColor = '#ccc'
                }
            });
            this.selectElement = item
            if(item.id == '其他金额'){
                this.inputStatus = true
                this.selectElement.elasticBigDec = this.userValue

            }else{
                this.inputStatus = false
            }
            this.$apply()
        },
        bindinput(event){
            this.userValue = event.detail.value
            this.selectElement.elasticBigDec = event.detail.value
        },
        bindconfirm(){
            // console.log(this.userValue)
            this.selectElement.elasticBigDec = this.userValue
            this.$apply()
        },
        bindblur(){
            if(this.selectElement.elasticBigDec){
                let data = {
                    p_id : wepy.$instance.globalData.p_id,
                    m_id : this.cardItem.m_id,
                    TranType : 0,
                    Bury_Type : 1,
                    Bury_Money : this.selectElement.elasticBigDec
                }
                requestData(requestUrl.getRechargeRule,"POST",data).then(res=>{
                    console.log('--------用户输入金额获取赠送比例---'+JSON.stringify(res.data.data[0]))
                })
            }
        },
        immediatelyRecharge(){
            let url = requestUrl.MemCard_Recharge;
            let data = {
                p_id: wepy.$instance.globalData.p_id,
                m_id: this.cardItem.m_id,
                elasticMoney: this.selectElement.elasticBigDec,
                givenMoney: this.selectElement.givenMoenyBigDec,
                token: wx.getStorageSync('token'),
            };
            requestData(url,'POST',data).then(res=>{
                let jssdk = res.data.data[0]
                wx.requestPayment({
                    'appId': jssdk.appId,
                    'timeStamp': jssdk.timeStamp.toString(),
                    'nonceStr': jssdk.nonceStr,
                    'package': jssdk.package,
                    'signType': jssdk.signType,
                    'paySign': jssdk.sign,
                    success:(res)=>{
                        wx.showToast({
                            title: '充值成功',
                            icon: 'success',
                            success:()=>{
                                setTimeout(() => {
                                    wx.navigateBack({
                                        delta: 1
                                    });
                                }, 1000);
                            }
                        });
                    },
                })
            })
        }
    };
    events = {};
    onLoad(options) {
        let cardItem_ = JSON.parse(options.item);
        this.cardItem = cardItem_
        let data = {
            p_id : wepy.$instance.globalData.p_id,
            m_id : cardItem_.m_id,
            TranType : 0,
            Bury_Type : 1,
            Bury_Money : 0
        }
        requestData(requestUrl.getRechargeRule,"POST",data).then((res)=>{
            res.data.data.forEach(element => {
                if(element.id == res.data.data[0].id){
                    element.borderColor = '#cd525b'
                    element.sanJiaoColor = '#cd525b'
                    element.moneyColor  = '#cd525b'
                    element.beanColor = '#666'
                }else{
                    element.borderColor = '#ccc'
                    element.sanJiaoColor = '#ccc'
                    element.moneyColor  = '#666'
                    element.beanColor = '#ccc'
                }
            });
            res.data.data.push({id:'其他金额',borderColor:'#ccc',sanJiaoColor:'#ccc',moneyColor:'#666',beanColor:'#ccc'})
            this.selectElement = res.data.data[0]
            this.selectPay = res.data.data
            this.$apply()
        })
    };
}
</script>

<template lang="wxml">
    <!-- 用户自定义输入充值金额 -->
    <view class="inputBox {{inputStatus?'inputBoxShow':''}}"><input placeholder='输入要充值的金额' @blur='bindblur' @confirm ='bindconfirm' focus='{{inputStatus}}' maxlength='7' @input='bindinput' value='{{userValue}}'/></view>
    <view class="cardBalance">
        卡内余额：<text>{{cardItem.balance}}</text>元
    </view>
    <view class="bannerBox"><image src='../../images/cardRechargeBanner.png'/></view>
    <view class='rechargeTitle'>选择充值金额</view>
    <view class='selectBox'>
        <view wx:for='{{selectPay}}' wx:key='' class='selectBox_item' @tap="selectPay({{item}})">
            <view class='selectBox_item_' style="border:1px solid {{item.borderColor}}">
                <block wx:if="{{item.id != '其他金额'}}">
                    <view style="color:{{item.moneyColor}}">{{item.elasticBigDec}}元</view>
                    <view style="color:{{item.beanColor}}">赠送￥{{item.givenMoenyBigDec}}</view>
                </block>
                <block wx:else>
                    <view style="color:{{item.moneyColor}}">{{item.id}}</view>
                    <view style="color:{{item.beanColor}}"></view>
                </block>
                <view class='sanjiao' style="border-color: transparent transparent {{item.sanJiaoColor}} transparent;"></view>
            </view>
        </view>
    </view>
    <view class="bottomPriceBox">
        <view>实际付款：<text>{{selectElement.elasticBigDec}}元</text></view>
        <button @tap="immediatelyRecharge">立即充值</button>
    </view>
    <!-- 遮罩 -->
    <view class="mask"></view>
</template>

<style lang="less">
    page{
        background-color: #f4f5f7;
    }
    view{
        box-sizing: border-box;
    }
    .cardBalance{
        width: 100%;
        background-color: #fff;
        padding: 50rpx 40rpx;
        text{
            color: #cd525b;
        }
    }
    .bannerBox{
        width: 100%;
        padding: 30rpx;
        image{
            width: 100%;
            height: 180rpx;
        }
    }
    .rechargeTitle{
        padding: 0 30rpx;
    }
    .selectBox{
        box-sizing: border-box;
        padding: 20rpx 30rpx 0 30rpx;
        display: flex;
        flex-wrap: wrap;
        .selectBox_item{
            width: 50%;
            display: flex;
            justify-content: center;
            .selectBox_item_{
                background-color: #fafafa;
                display: flex;
                justify-content: center;
                width: 300rpx;
                height: 120rpx;
                line-height: 120rpx;
                margin-bottom: 40rpx;
                overflow: hidden;
                position: relative;
                view:nth-child(1){
                    font-size: 33rpx;
                    margin-right: 15rpx;
                }
                view:nth-child(2){
                    font-size: 26rpx;
                }
                .sanjiao{
                    position: absolute;
                    right: 0;
                    top: 0;
                    border-style: solid;
                    border-width: 0 0 40rpx 40rpx;
                    width: 0px;
                    height: 0px;
                    transform: rotate(-90deg);
                }
            }
        }
    }
    .inputBox{
        transform: translateY(-110%);
        transition: transform .4s;
        width: 100%;
        position: fixed;
        top: 0;
        z-index: 1;
        padding: 40rpx 50rpx;
        background-color: #fff;
        box-shadow: 0 10rpx 10rpx rgb(221, 221, 221);
        input{
            box-sizing: border-box;
            height: 77rpx;
            width: 100%;
            line-height: 77rpx;
            border: 1rpx solid rgb(189, 187, 187);
            padding: 0 30rpx;
            color: #000;
        }
    }
    .inputBoxShow{
        transform: translateY(0);
    }
    .bottomPriceBox{
        position: fixed;
        bottom: 0;
        width: 100%;
        height: 100rpx;
        display: flex;
        align-items: center;
        padding-left: 40rpx;
        background-color: #fff;
        view{
            flex: 1;
            text{
                color: #cd525b;
            }
        }
        button{
            margin: 0;
            padding: 0;
            background-color: #cd525b;
            border-radius: 0;
            font-size: 30rpx;
            line-height: 100rpx;
            color: #fff;
            width: 195rpx;
        }
    }
</style>