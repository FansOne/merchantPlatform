'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _api = require('./api.js');

exports.default = {
    getToken: _api.mainApi + 'WXInterface/GetAccessToken',
    getIndexData: _api.mainApi + 'BaseInfo/GetPHomeinfo',
    goodLists: _api.mainApi + 'MerchantInfo/GetMchInfoList',
    MerchantInfo: _api.mainApi + 'MerchantInfo/GetMchInfo',
    getRechargeRule: _api.mainApi + 'MemCard/MemCard_GetInfoElastic',
    cardMessage: _api.mainApi + 'MemCard/MemCard_GetInfoBase',
    payMent: _api.mainApi + 'Bury/Bury',
    GetProductClass: _api.mainApi + 'MerchantInfo/GetProductClass',
    memUserInfo: _api.mainApi + 'MemCard/MemUserInfo',
    memberList: _api.mainApi + 'MemCard/memberList',
    memberCostRecord: _api.mainApi + 'MemCard/memberCostRecord',
    MemCard_Recharge: _api.mainApi + 'MemCard/MemCard_Recharge',
    getwxUserInfo: _api.mainApi + 'MemCard/getwxUserInfo',
    MerchantAuth: _api.mainApi + 'MerchantInfo/MerchantAuth',
    GetProductByClass: _api.mainApi + 'MerchantInfo/GetProductByClass',
    getProductDetails: _api.mainApi + 'MerchantInfo/GetProductDetails',
    getProductSKU: _api.mainApi + 'MerchantInfo/GetProductSKU',
    downOrder: _api.mainApi + 'Order/Order',
    orderList: _api.mainApi + 'Order/OrderList',
    merchantFunction: _api.mainApi + 'MerchantInfo/merchantFunction',
    orderDetails: _api.mainApi + 'Order/orderDetail',
    getMerchantCode: _api.mainApi + 'MerchantInfo/getMerchantCode',
    getDistributionMoney: _api.mainApi + 'takeOut/getDistributionMoney',
    updateFormid: _api.mainApi + 'MemCard/updateFormid',
    merchantPreloadInfo: _api.mainApi + 'MerchantInfo/merchantPreloadInfo',
    getMerchantShareInfo: _api.mainApi + 'MerchantInfo/getMerchantShareInfo',
    getPersonalCode: _api.mainApi + 'MerchantInfo/getPersonalCode'
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RVcmwuanMiXSwibmFtZXMiOlsiZ2V0VG9rZW4iLCJtYWluQXBpIiwiZ2V0SW5kZXhEYXRhIiwiZ29vZExpc3RzIiwiTWVyY2hhbnRJbmZvIiwiZ2V0UmVjaGFyZ2VSdWxlIiwiY2FyZE1lc3NhZ2UiLCJwYXlNZW50IiwiR2V0UHJvZHVjdENsYXNzIiwibWVtVXNlckluZm8iLCJtZW1iZXJMaXN0IiwibWVtYmVyQ29zdFJlY29yZCIsIk1lbUNhcmRfUmVjaGFyZ2UiLCJnZXR3eFVzZXJJbmZvIiwiTWVyY2hhbnRBdXRoIiwiR2V0UHJvZHVjdEJ5Q2xhc3MiLCJnZXRQcm9kdWN0RGV0YWlscyIsImdldFByb2R1Y3RTS1UiLCJkb3duT3JkZXIiLCJvcmRlckxpc3QiLCJtZXJjaGFudEZ1bmN0aW9uIiwib3JkZXJEZXRhaWxzIiwiZ2V0TWVyY2hhbnRDb2RlIiwiZ2V0RGlzdHJpYnV0aW9uTW9uZXkiLCJ1cGRhdGVGb3JtaWQiLCJtZXJjaGFudFByZWxvYWRJbmZvIiwiZ2V0TWVyY2hhbnRTaGFyZUluZm8iLCJnZXRQZXJzb25hbENvZGUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztrQkFFZTtBQUNYQSxjQUFlQyxZQUFmLCtCQURXO0FBRVhDLGtCQUFtQkQsWUFBbkIsMEJBRlc7QUFHWEUsZUFBZ0JGLFlBQWhCLGdDQUhXO0FBSVhHLGtCQUFtQkgsWUFBbkIsNEJBSlc7QUFLWEkscUJBQXNCSixZQUF0QixtQ0FMVztBQU1YSyxpQkFBa0JMLFlBQWxCLGdDQU5XO0FBT1hNLGFBQWNOLFlBQWQsY0FQVztBQVFYTyxxQkFBc0JQLFlBQXRCLGlDQVJXO0FBU1hRLGlCQUFrQlIsWUFBbEIsd0JBVFc7QUFVWFMsZ0JBQWlCVCxZQUFqQix1QkFWVztBQVdYVSxzQkFBdUJWLFlBQXZCLDZCQVhXO0FBWVhXLHNCQUF1QlgsWUFBdkIsNkJBWlc7QUFhWFksbUJBQW9CWixZQUFwQiwwQkFiVztBQWNYYSxrQkFBbUJiLFlBQW5CLDhCQWRXO0FBZVhjLHVCQUF3QmQsWUFBeEIsbUNBZlc7QUFnQlhlLHVCQUF3QmYsWUFBeEIsbUNBaEJXO0FBaUJYZ0IsbUJBQW9CaEIsWUFBcEIsK0JBakJXO0FBa0JYaUIsZUFBZ0JqQixZQUFoQixnQkFsQlc7QUFtQlhrQixlQUFnQmxCLFlBQWhCLG9CQW5CVztBQW9CWG1CLHNCQUF1Qm5CLFlBQXZCLGtDQXBCVztBQXFCWG9CLGtCQUFtQnBCLFlBQW5CLHNCQXJCVztBQXNCWHFCLHFCQUFzQnJCLFlBQXRCLGlDQXRCVztBQXVCWHNCLDBCQUEyQnRCLFlBQTNCLGlDQXZCVztBQXdCWHVCLGtCQUFtQnZCLFlBQW5CLHlCQXhCVztBQXlCWHdCLHlCQUEwQnhCLFlBQTFCLHFDQXpCVztBQTBCWHlCLDBCQUEyQnpCLFlBQTNCLHNDQTFCVztBQTJCWDBCLHFCQUFzQjFCLFlBQXRCO0FBM0JXLEMiLCJmaWxlIjoicmVxdWVzdFVybC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1haW5BcGkgfSBmcm9tICcuL2FwaSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGdldFRva2VuIDogYCR7IG1haW5BcGkgfVdYSW50ZXJmYWNlL0dldEFjY2Vzc1Rva2VuYCxcbiAgICBnZXRJbmRleERhdGEgOiBgJHsgbWFpbkFwaSB9QmFzZUluZm8vR2V0UEhvbWVpbmZvYCxcbiAgICBnb29kTGlzdHMgOiBgJHsgbWFpbkFwaSB9TWVyY2hhbnRJbmZvL0dldE1jaEluZm9MaXN0YCxcbiAgICBNZXJjaGFudEluZm8gOiBgJHsgbWFpbkFwaSB9TWVyY2hhbnRJbmZvL0dldE1jaEluZm9gLFxuICAgIGdldFJlY2hhcmdlUnVsZSA6IGAkeyBtYWluQXBpIH1NZW1DYXJkL01lbUNhcmRfR2V0SW5mb0VsYXN0aWNgLFxuICAgIGNhcmRNZXNzYWdlIDogYCR7IG1haW5BcGkgfU1lbUNhcmQvTWVtQ2FyZF9HZXRJbmZvQmFzZWAsXG4gICAgcGF5TWVudCA6IGAkeyBtYWluQXBpIH1CdXJ5L0J1cnlgLFxuICAgIEdldFByb2R1Y3RDbGFzcyA6IGAkeyBtYWluQXBpIH1NZXJjaGFudEluZm8vR2V0UHJvZHVjdENsYXNzYCxcbiAgICBtZW1Vc2VySW5mbyA6IGAkeyBtYWluQXBpIH1NZW1DYXJkL01lbVVzZXJJbmZvYCxcbiAgICBtZW1iZXJMaXN0IDogYCR7IG1haW5BcGkgfU1lbUNhcmQvbWVtYmVyTGlzdGAsXG4gICAgbWVtYmVyQ29zdFJlY29yZCA6IGAkeyBtYWluQXBpIH1NZW1DYXJkL21lbWJlckNvc3RSZWNvcmRgLFxuICAgIE1lbUNhcmRfUmVjaGFyZ2UgOiBgJHsgbWFpbkFwaSB9TWVtQ2FyZC9NZW1DYXJkX1JlY2hhcmdlYCxcbiAgICBnZXR3eFVzZXJJbmZvIDogYCR7IG1haW5BcGkgfU1lbUNhcmQvZ2V0d3hVc2VySW5mb2AsXG4gICAgTWVyY2hhbnRBdXRoIDogYCR7IG1haW5BcGkgfU1lcmNoYW50SW5mby9NZXJjaGFudEF1dGhgLFxuICAgIEdldFByb2R1Y3RCeUNsYXNzIDogYCR7IG1haW5BcGkgfU1lcmNoYW50SW5mby9HZXRQcm9kdWN0QnlDbGFzc2AsXG4gICAgZ2V0UHJvZHVjdERldGFpbHMgOiBgJHsgbWFpbkFwaSB9TWVyY2hhbnRJbmZvL0dldFByb2R1Y3REZXRhaWxzYCxcbiAgICBnZXRQcm9kdWN0U0tVIDogYCR7IG1haW5BcGkgfU1lcmNoYW50SW5mby9HZXRQcm9kdWN0U0tVYCxcbiAgICBkb3duT3JkZXIgOiBgJHsgbWFpbkFwaSB9T3JkZXIvT3JkZXJgLFxuICAgIG9yZGVyTGlzdCA6IGAkeyBtYWluQXBpIH1PcmRlci9PcmRlckxpc3RgLFxuICAgIG1lcmNoYW50RnVuY3Rpb24gOiBgJHsgbWFpbkFwaSB9TWVyY2hhbnRJbmZvL21lcmNoYW50RnVuY3Rpb25gLFxuICAgIG9yZGVyRGV0YWlscyA6IGAkeyBtYWluQXBpIH1PcmRlci9vcmRlckRldGFpbGAsXG4gICAgZ2V0TWVyY2hhbnRDb2RlIDogYCR7IG1haW5BcGkgfU1lcmNoYW50SW5mby9nZXRNZXJjaGFudENvZGVgLFxuICAgIGdldERpc3RyaWJ1dGlvbk1vbmV5IDogYCR7IG1haW5BcGkgfXRha2VPdXQvZ2V0RGlzdHJpYnV0aW9uTW9uZXlgLFxuICAgIHVwZGF0ZUZvcm1pZCA6IGAkeyBtYWluQXBpIH1NZW1DYXJkL3VwZGF0ZUZvcm1pZGAsXG4gICAgbWVyY2hhbnRQcmVsb2FkSW5mbyA6IGAkeyBtYWluQXBpIH1NZXJjaGFudEluZm8vbWVyY2hhbnRQcmVsb2FkSW5mb2AsXG4gICAgZ2V0TWVyY2hhbnRTaGFyZUluZm8gOiBgJHsgbWFpbkFwaSB9TWVyY2hhbnRJbmZvL2dldE1lcmNoYW50U2hhcmVJbmZvYCxcbiAgICBnZXRQZXJzb25hbENvZGUgOiBgJHsgbWFpbkFwaSB9TWVyY2hhbnRJbmZvL2dldFBlcnNvbmFsQ29kZWBcbn0iXX0=